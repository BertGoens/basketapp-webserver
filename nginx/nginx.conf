user  www-data;
worker_processes  auto;
# pid /run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    ### Basic Settings
	# Hide the Nginx-version we are running
    # This sadly does not hide the fact that we use Nginx
    server_tokens   off;
    
    # To hide or modify our header we need to recompile Nginx with a special flag 
    # --add-module=/path-to-headers-more-nginx-module
    # See https://github.com/openresty/headers-more-nginx-module#installation
    # This enables the following command
    # more_set_headers "Server: ";
    # Which does hide our server name

    include       mime.types;
    default_type  application/json;

    # Enable uber fast sending of files
    sendfile        on;

    # This seems to be required for some vhosts
    server_names_hash_bucket_size 128;

    # Keep clients alive for max 60 seconds, 
    # Protects against 100's of clients trying to occupy all connections
    keepalive_timeout  60;

    ### SSL Settings
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE
    ssl_prefer_server_ciphers on;

    ### Gzip Settings
    gzip on;
    gzip_proxied any;       # Enables gzip for proxied requests
    gzip_disable "msie6";
    gzip_comp_level 6;
    gzip_min_length 256;
    gzip_buffers 16 8k;
    # Default only gzip's text/html, we add other relevant types
    gzip_types gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/vnd.ms-fontobject application/x-font-ttf font/opentype image/svg+xml image/x-icon;

    ### Logging Settings
    log_format   main '$remote_addr - $remote_user [$time_local]  $status '
    '"$request" $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log;

    ### Virtual Host Configs
    include /etc/nginx/conf.d/*.conf;
    include /etc/nginx/sites-enabled/*;

    # Rate limiting (restrict ip to n requests(r) per second(s))
    # Use the $binary_remote_addr variable since it takes up less space than the
    # the string representation of a client IP address, $remote_addr.
    # We are not yet limiting anything, this is just the set-up
    limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/s;

    upstream nodejsbackend {
        server localhost:8000;
    }

}
